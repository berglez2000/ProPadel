---
export interface Props {
  text: string;
  speed?: number;
  className?: string;
}

const { text, speed = 100, className = '' } = Astro.props;
---

<div class={`typewriter-container ${className}`}>
  <span class="typewriter-text" data-text={text} data-speed={speed}></span>
  <span class="cursor">|</span>
</div>

<style>
  .typewriter-container {
    display: inline-block;
  }
  
  .typewriter-text {
    display: inline-block;
  }
  
  .cursor {
    display: inline-block;
    animation: blink 1s infinite;
    font-weight: bold;
  }
  
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }
</style>

<script>
  function initTypewriter() {
    const typewriterElements = document.querySelectorAll('.typewriter-text');
    
    typewriterElements.forEach(element => {
      const text = element.getAttribute('data-text');
      const speed = parseInt(element.getAttribute('data-speed') || '100');
      
      if (!text) return;
      
      element.textContent = '';
      let index = 0;
      
      function typeChar() {
        if (index < text.length) {
          element.textContent += text.charAt(index);
          index++;
          setTimeout(typeChar, speed);
        } else {
          // Animation complete, hide cursor
          const cursor = element.nextElementSibling;
          if (cursor && cursor.classList.contains('cursor')) {
            cursor.style.display = 'none';
          }
        }
      }
      
      // Start typing animation
      setTimeout(typeChar, 500);
    });
  }
  
  // Initialize when DOM is loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTypewriter);
  } else {
    initTypewriter();
  }
</script> 