---
export interface Props {
  direction?: 'up' | 'down';
  color?: string;
  className?: string;
}

const { direction = 'down', color = 'white', className = '' } = Astro.props;
---

<div class={`wave-divider ${className}`}>
  {direction === 'down' ? (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 20" preserveAspectRatio="none" class="w-full h-auto">
      <path fill={color} fill-opacity="1" d="M0,10 C20,5 30,15 50,10 C70,5 80,15 100,10 L100,20 L0,20 Z"></path>
    </svg>
  ) : (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 20" preserveAspectRatio="none" class="w-full h-auto transform rotate-180">
      <path fill={color} fill-opacity="1" d="M0,10 C20,5 30,15 50,10 C70,5 80,15 100,10 L100,20 L0,20 Z"></path>
    </svg>
  )}
</div>

<style>
  .wave-divider {
    position: relative;
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    overflow: hidden;
    line-height: 0;
  }
  
  .wave-divider svg {
    position: relative;
    display: block;
    width: 100%;
    height: 80px;
  }
  
  @media (max-width: 768px) {
    .wave-divider svg {
      height: 60px;
    }
  }
</style> 